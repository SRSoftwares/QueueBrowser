package com.queuebrowser.views;

import java.awt.Image;
import javax.imageio.ImageIO;
import javax.swing.JDialog;
import javax.swing.JFrame;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * View for showing details about a Exception in a Dialog
 *
 * @author - Sumit Roy
 * @Created On - Feb 28, 2013,11:36:35 AM
 * @Project - JMSMessageViewGUI
 *
 */
public class ExceptionDetailsDialog extends javax.swing.JDialog {

    private static final Logger logger = LoggerFactory.getLogger(ExceptionDetailsDialog.class);
    private static ExceptionDetailsDialog exceptionDetailsDialog = null;
    private static ExceptionDetailsDialog exceptionDetailsFormDialog = null;

    /**
     * Constructor for initializing Exception Details Dialog when opening from a
     * JDialog
     *
     * @param exceptionType Type of the exception occurred
     * @param exceptionOccurance Name of the Operation , performing which
     * exception is occurred
     * @param ex exception Object that occurred
     * @param parent parent dialog view on which this dialog is going to be
     * visible
     */
    private ExceptionDetailsDialog(JDialog parent) {
        super(parent, true);
        initComponents();
        setDialogIcon();


    }

    /**
     * Constructor for initializing Exception Details Dialog when opening from a
     * JFrame
     *
     * @param exceptionType Type of the exception occurred
     * @param exceptionOccurance Name of the Operation , performing which
     * exception is occurred
     * @param ex exception Object that occurred
     * @param parent parent frame view on which this dialog is going to be
     * visible
     */
    private ExceptionDetailsDialog(JFrame parent) {
        super(parent, true);
        initComponents();
        setDialogIcon();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        exceptionTypeLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        exceptionDetailsTextArea = new javax.swing.JTextArea();
        okButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        exceptionOccuranceLabel = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Exception Details");
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Exception Details"));
        mainPanel.setToolTipText("Details of a Exception");

        jLabel1.setText("Exception Type");

        exceptionTypeLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Exception Details");

        exceptionDetailsTextArea.setEditable(false);
        exceptionDetailsTextArea.setColumns(20);
        exceptionDetailsTextArea.setLineWrap(true);
        exceptionDetailsTextArea.setRows(5);
        exceptionDetailsTextArea.setToolTipText("Details of Exception");
        exceptionDetailsTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(exceptionDetailsTextArea);

        okButton.setText("Ok");
        okButton.setToolTipText("Click here to close the window");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Exception Occured");

        exceptionOccuranceLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(okButton))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(exceptionTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(exceptionOccuranceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(exceptionOccuranceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exceptionTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(okButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea exceptionDetailsTextArea;
    private javax.swing.JLabel exceptionOccuranceLabel;
    private javax.swing.JLabel exceptionTypeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private void setDialogIcon() {
        try {
            Image image = ImageIO.read(this.getClass().getResource("/images/informationBallonBlue2.png"));
            if (image != null) {
                this.setIconImage(image);
            }
        } catch (Exception e) {
            logger.error("Exception Occured {}", e);
        }
    }

    private void populateExceptionDetailsFields(String exceptionType, String exceptionOccurance, Exception ex) {
        exceptionTypeLabel.setText(exceptionType);
        exceptionDetailsTextArea.setText(ex.toString());
        exceptionOccuranceLabel.setText(exceptionOccurance);
    }

    public static void showExceptionsDetailsDialog(JDialog parent, String exceptionType, String exceptionOccurance, Exception ex) {
        if (exceptionDetailsDialog == null) {
            exceptionDetailsDialog = new ExceptionDetailsDialog(parent);
        }
        exceptionDetailsDialog.populateExceptionDetailsFields(exceptionType, exceptionOccurance, ex);
        exceptionDetailsDialog.setLocationRelativeTo(parent);
        exceptionDetailsDialog.setVisible(true);

    }

    public static void showExceptionsDetailsDialog(JFrame parent, String exceptionType, String exceptionOccurance, Exception ex) {
        if (exceptionDetailsFormDialog == null) {
            exceptionDetailsFormDialog = new ExceptionDetailsDialog(parent);
        }
        exceptionDetailsFormDialog.populateExceptionDetailsFields(exceptionType, exceptionOccurance, ex);
        exceptionDetailsFormDialog.setLocationRelativeTo(parent);
        exceptionDetailsFormDialog.setVisible(true);
    }
}
