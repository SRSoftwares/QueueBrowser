/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.queuebrowser.views;

import java.awt.Image;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.JDialog;
import javax.swing.JFrame;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author - Sumit Roy
 * @Created On - Feb 27, 2013,4:28:37 PM
 * @Project - JMSMessageViewGUI
 */
public class MessageDetailsDialog extends javax.swing.JDialog {

    private static final Logger logger = LoggerFactory.getLogger(MessageDetailsDialog.class);
    private static MessageDetailsDialog messageDetailsDialog = null;
    private static MessageDetailsDialog messageDetailsFormDialog = null;

    /**
     * Constructor for creating message details dialog on a JFrame
     *
     * @param messageDetails a key value pair (map) that hold details about a
     * message e.g. message content timestamp type etc
     * @param parent parent frame on which this dialog will be shown
     */
    private MessageDetailsDialog(JFrame parent) {
        super(parent, true);
        initComponents();
        setDialogIcon();
        
    }

    /**
     * Constructor for creating message details dialog on a JDialog
     *
     * @param messageDetails a key value pair (map) that hold details about a
     * message e.g. message content timestamp type etc
     * @param parent parent dialog on which this dialog will be shown
     */
    private MessageDetailsDialog(JDialog parent) {
        super(parent, true);
        initComponents();
        setDialogIcon();

    }

    private void setDialogIcon() {
        try {
            Image image = ImageIO.read(this.getClass().getResource("/images/createNewQueueBig.png"));
            if (image != null) {
                this.setIconImage(image);
            }
        } catch (Exception e) {
            logger.error("Exception Occured {}", e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        msgIDTextField = new javax.swing.JTextField();
        msgTypeTextField = new javax.swing.JTextField();
        msgTimeStampTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageContentTextArea = new javax.swing.JTextArea();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Message Details");
        setName("messageDetailsDialog"); // NOI18N
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Message Details"));
        mainPanel.setToolTipText("Shows details about a Messgae");

        jLabel1.setText("Message ID");

        jLabel2.setText("Message Type");

        jLabel3.setText("Message Date & Time");

        jLabel4.setText("Message Content");

        msgIDTextField.setEditable(false);
        msgIDTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        msgTypeTextField.setEditable(false);
        msgTypeTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        msgTimeStampTextField.setEditable(false);
        msgTimeStampTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        messageContentTextArea.setEditable(false);
        messageContentTextArea.setColumns(20);
        messageContentTextArea.setRows(5);
        jScrollPane1.setViewportView(messageContentTextArea);

        okButton.setText("Ok");
        okButton.setToolTipText("Close this View");
        okButton.setName("okBtn"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(43, 43, 43)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(msgIDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addComponent(msgTypeTextField)))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(msgTimeStampTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(okButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(msgIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(msgTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(msgTimeStampTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(okButton)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextArea messageContentTextArea;
    private javax.swing.JTextField msgIDTextField;
    private javax.swing.JTextField msgTimeStampTextField;
    private javax.swing.JTextField msgTypeTextField;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private void populateMessageInformationFields(Map<String, String> messageDetails) {
        msgIDTextField.setText(messageDetails.get("id"));
        msgTimeStampTextField.setText(messageDetails.get("timestamp"));
        msgTypeTextField.setText(messageDetails.get("type"));
        messageContentTextArea.setText(messageDetails.get("content"));

    }

    public static void showQueueMessageDetailsDialog(JDialog parent, Map<String, String> messageDetails) {
        if (messageDetailsDialog == null) {
            messageDetailsDialog = new MessageDetailsDialog(parent);
        }
        messageDetailsDialog.populateMessageInformationFields(messageDetails);
        messageDetailsDialog.setLocationRelativeTo(parent);
        messageDetailsDialog.setVisible(true);

    }

    public static void showQueueMessageDetailsDialog(JFrame parent, Map<String, String> messageDetails) {
        if (messageDetailsFormDialog == null) {
            messageDetailsFormDialog = new MessageDetailsDialog(parent);
        }
        messageDetailsFormDialog.populateMessageInformationFields(messageDetails);
        messageDetailsFormDialog.setLocationRelativeTo(parent);
        messageDetailsFormDialog.setVisible(true);
    }
}
